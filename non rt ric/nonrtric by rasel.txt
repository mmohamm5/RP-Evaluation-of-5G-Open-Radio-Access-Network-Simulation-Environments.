WYTxX8tghru4V!EX
# For non-RT RIC
Username: o-ra
password: non-rt-ric
139.6.19.29

#For Near-RT RIC
Username: o-ra
password: near-rt-ric
139.6.19.30

Open new terminal and run this for avoid localhost error:8080
kubectl proxy --port=8080


  1  nano .ssh/authorized_keys
    2  sudo systemctl restart ssh
    3  clear
    4  sudo su
    5  clear
    6  nano /home/o-ran/.ssh/authorized_keys
    7  cat /home/o-ran/.ssh/authorized_keys
    8  systemctl restart ssh
    9  clear
   10  sudo -i
   11  sudo apt-get update
   12  sudo apt-get install     ca-certificates     curl     gnupg     lsb-release
   13  clear
   14  sudo mkdir -m 0755 -p /etc/apt/keyrings
   15  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
   16  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
   17    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   18  sudo apt-get update
   19  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
   20  sudo docker run hello-world
   21  clear
   22  docker ps
   23  sudo docker ps
   24  docker version
   25  sudo usermod -aG docker $USER
   26  docker version
   27  ifconfig
   28  sudo ifconfig
   29  clear
   30  sudo apt-get update
   31  clear
   32  ls
   33  ls -a
   34  clear
   35  sudo apt-get update
   36  clear
   37  apt-get update
   38  lsb_release -a
   39  docker version
   40  docker images
   41  docker ps
   42  docker ps -a
   43  swapoff -a
   44  clear
   45  sudo apt-get update
   46  clear
   47  lsb_release -a
   48  sudo apt-get install -y apt-transport-https ca-certificates curl
   49  curl -fsSLo containerd-config.toml   https://gist.githubusercontent.com/oradwell/31ef858de3ca43addef68ff971f459c2/raw/5099df007eb717a11825c3890a0517892fa12dbf/containerd-config.toml
   50  sudo mkdir /etc/containerd
   51  sudo mv containerd-config.toml /etc/containerd/config.toml
   52  sudo systemctl daemon-reload
   53  sudo systemctl enable --now containerd
   54  curl -fsSLo runc.amd64   https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
   55  sudo install -m 755 runc.amd64 /usr/local/sbin/runc
   56  curl -fsSLo cni-plugins-linux-amd64-v1.1.1.tgz   https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
   57  sudo mkdir -p /opt/cni/bin
   58  sudo tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.1.1.tgz
   59  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

   60  sudo modprobe -a overlay br_netfilter
   61  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

   62  sudo sysctl --system
   63  sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg   https://packages.cloud.google.com/apt/doc/apt-key.gpg
   64  echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"   | sudo tee /etc/apt/sources.list.d/kubernetes.list
   65  sudo apt-get update
   66  sudo apt-get install -y kubelet kubeadm kubectl
   67  sudo apt-mark hold kubelet kubeadm kubectl
   68  swapon --show
   69  sudo swapoff -a
   70  sudo sed -i -e '/swap/d' /etc/fstab
   71  clear
   72  sudo kubeadm init --pod-network-cidr=10.244.0.0/16



   73  sudo systemctl daemon-reload
   74  sudo systemctl enable --now containerd
   75  sudo kubeadm init --pod-network-cidr=10.244.0.0/16




   76  history
   77  curl -fsSLo containerd-config.toml   https://gist.githubusercontent.com/oradwell/31ef858de3ca43addef68ff971f459c2/raw/5099df007eb717a11825c3890a0517892fa12dbf/containerd-config.toml
   78  sudo mkdir /etc/containerd
   79  sudo mv containerd-config.toml /etc/containerd/config.toml
   80  curl -fsSLo containerd-1.6.14-linux-amd64.tar.gz   https://github.com/containerd/containerd/releases/download/v1.6.14/containerd-1.6.14-linux-amd64.tar.gz
   81  sudo tar Cxzvf /usr/local containerd-1.6.14-linux-amd64.tar.gz
   82  sudo curl -fsSLo /etc/systemd/system/containerd.service   https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
   83  sudo systemctl daemon-reload
   84  sudo systemctl enable --now containerd
   85  sudo kubeadm init --pod-network-cidr=10.244.0.0/16
   86  rm /etc/containerd/config.toml
   87  sudo rm /etc/containerd/config.toml
   88  ls /etc/containerd/
   89  sudo ls /etc/containerd/
   90  sudo pwd
   91  sudo su
   92  sudo ls /etc/containerd/
   93  systemctl restart containerd
   94  sudo kubeadm init --pod-network-cidr=10.244.0.0/16
   95  mkdir -p $HOME/.kube
   96  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   97  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   98  kubectl taint nodes --all node-role.kubernetes.io/master-
   99  kubectl taint nodes --all node-role.kubernetes.io/control-plane-
  100  kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  101  curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  102  curl https://raw.githubusercontent.com/helm/chartmuseum/main/scripts/get-chartmuseum | bash
  103  helm repo add openebs https://openebs.github.io/charts
  104  kubectl create namespace openebs
  105  helm --namespace=openebs install openebs openebs/openebs
  106  helm repo add bitnami https://charts.bitnami.com/bitnami
  107  helm install wordpress bitnami/wordpress   --set=global.storageClass=openebs-hostpath
  108  kubectl get deploy bitnami
  109  kubectl get deploy -n openebs
  110  git clone "https://gerrit.o-ran-sc.org/r/it/dep"
  111  sudo dep/bin/deploy-nonrtric -f dep/nonrtric/RECIPE_EXAMPLE/example_recipe.yaml
  112  sudo kubectl get po -n nonrtric
  113  a1-sim-osc-0
  114  kubectl describe pod
  115  kubectl describe pod a1-sim-osc-0 -n nonrtric
  116  kubectl get pod -n kube-system
  117  sudo vi /etc/netplan/01-network-manager-all.yaml
  118  sudo netplan apply
  119  sudo vi /etc/netplan/01-network-manager-all.yaml
  120  sudo netplan apply
  121  sudo vi /etc/netplan/01-network-manager-all.yaml
  122  sudo netplan apply
  123  sudo vi /etc/netplan/01-network-manager-all.yaml
  124  sudo netplan apply
  125  sudo apt-get install resolvconf
  126  sudo /etc/resolvconf/resolv.conf.d/head
  127  sudo vi /etc/resolvconf/resolv.conf.d/head
  128  sudo kubectl get po -n nonrtric
  129  kubectl -n nonrtric rollout restart deploy
  130  sudo kubectl get po -n nonrtric
  131  watch sudo kubectl get po -n nonrtric
  132  ping google.com
  133  watch sudo kubectl get po -n nonrtric
  134  kubectl describe pod a1controller-677dfc456d-glr78 -n nonrtric
  135  ping nexus3.onap.org
  136  kubectl describe pod a1controller-677dfc456d-glr78 -n nonrtric
  137  telnet 199.204.45.137 10002
  138  telnet 199.204.45.137 80
  139  history





